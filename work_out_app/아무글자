
      // @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-v3-or-Later

      // This is a translation of Tuchscherer's standard percentage chart into
      // a continuous function. This enables using real numbers for RPEs, like 8.75.
      function percentage(reps, rpe) {
        // Cap the RPE at 10.
        if (rpe > 10) {
          rpe = 10.0;
        }

        // No prediction if failure occurred, or if RPE is unreasonably low.
        if (reps < 1 || rpe < 4) {
          return 0.0;
        }

        // Handle the obvious case early to avoid bound errors.
        if (reps === 1 && rpe === 10.0) {
          return 100.0;
        }

        // x is defined such that 1@10 = 0, 1@9 = 1, 1@8 = 2, etc.
        // By definition of RPE, then also:
        //  2@10 = 1@9 = 1
        //  3@10 = 2@9 = 1@8 = 2
        // And so on. That pattern gives the equation below.
        var x = (10.0 - rpe) + (reps - 1);

        // The logic breaks down for super-high numbers,
        // and it's too hard to extrapolate an E1RM from super-high-rep sets anyway.
        if (x >= 16) {
          return 0.0;
        }

        var intersection = 2.92;

        // The highest values follow a quadratic.
        // Parameters were resolved via GNUPlot and match extremely closely.
        if (x <= intersection) {
          var a = 0.347619;
          var b = -4.60714;
          var c = 99.9667;
          return a*x*x + b*x + c;
        }

        // Otherwise it's just a line, since Tuchscherer just guessed.
        var m = -2.64249;
        var b = 97.0955;
        return m*x + b;
      }

      function calc() {
        var have_weight = Number(document.getElementById("have-weight").value);
        var have_reps = Number(document.getElementById("have-reps").value);
        var have_rpe = Number(document.getElementById("have-rpe").value);
        var want_reps = Number(document.getElementById("want-reps").value);
        var want_rpe = Number(document.getElementById("want-rpe").value);
        var calc_e1rm = document.getElementById("calc-e1rm");
        var calc_weight = document.getElementById("calc-weight");

        // Clear the HTML at the start.
        calc_e1rm.innerHTML = "";
        calc_weight.innerHTML = "";

        // Ensure that the E1RM widgets are sane.
        if (isNaN(have_weight) || have_weight <= 0) return;
        if (isNaN(have_reps) || have_reps <= 0) return;
        if (Math.floor(have_reps) !== have_reps) return;
        if (isNaN(have_rpe) || have_rpe <= 0) return;

        // Calculate the E1RM percentage.
        var p = percentage(have_reps, have_rpe);
        if (p <= 0) return;
        var e1rm = have_weight / p * 100;
        if (e1rm <= 0) return;

        // Write the E1RM.
        calc_e1rm.innerHTML = e1rm.toFixed(1);

        // Ensure that the Weight widgets are sane.
        if (isNaN(want_reps) || want_reps <= 0) return;
        if (Math.floor(want_reps) !== want_reps) return;
        if (isNaN(want_rpe) || want_rpe <= 0) return;

        // Calculate the Weight percentage.
        var p2 = percentage(want_reps, want_rpe);
        if (p2 <= 0) return;
        var weight = e1rm / 100 * p2;

        // Write the Weight
        calc_weight.innerHTML = weight.toFixed(1);
      }

      document.addEventListener("DOMContentLoaded", function(e){calc()});
      // @license-end
    